name: CI

on: [push, pull_request]

jobs:
  windows-cmake:
    name: Windows cmake ${{matrix.Configuration}}
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        Configuration: [Debug]
    steps:
    - uses: actions/checkout@main
      with:
        submodules: recursive

    - uses: ilammy/msvc-dev-cmd@v1
    - name: Build
      run: |
        cmake --preset='Ninja-${{matrix.Configuration}}'
        cmake --build build/Ninja-${{matrix.Configuration}}

    - name: Run test
      run: |
        pwd
        ./build/Ninja-${{matrix.Configuration}}/${{matrix.Configuration}}/dxvk-test.exe

  linux-cmake:
    name: Linux cmake ${{matrix.Configuration}}
    strategy:
      fail-fast: false
      matrix:
        Configuration: [Debug, Debug-DXVK1, Debug-Old, Debug-Old-DXVK1, Debug-NoDXVK]
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@main
      with:
        submodules: recursive

    - name: Install libs, build and test
      uses: uraimo/run-on-arch-action@v3
      with:
        arch: none
        distro: none
        base_image: --platform=linux/amd64 amd64/ubuntu:25.10
        # GitHub token used for caching Docker images in project's public package registry
        githubToken: ${{github.token}}
        # Mount the juffed directory as /artifacts in the container
        dockerRunArgs: |
          --volume "${PWD}:/artifacts"
        # Install dependencies in the container. They will be cached
        install: |
          export DEBIAN_FRONTEND=noninteractive
          apt-get update -q -y
          apt-get install -q -y automake-1.17 bison cmake flex gcc git libsdl2-dev mesa-vulkan-drivers vulkan-tools libvulkan-dev glslang-tools clang meson ninja-build libjson-perl spirv-headers wine64-tools
        run: |
          export CC=gcc && export CXX=g++
          ${CXX} --version && cmake --version
          cmake --preset=Ninja-${{matrix.Configuration}}
          cmake --build build/Ninja-${{matrix.Configuration}}
          echo ${{matrix.Configuration}} test result:
          DXVK_WSI_DRIVER=SDL2 ./build/Ninja-${{matrix.Configuration}}/Debug/dxvk-test
